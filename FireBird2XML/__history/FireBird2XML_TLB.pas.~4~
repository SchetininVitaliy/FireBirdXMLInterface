unit FireBird2XML_TLB;

// ************************************************************************ //
// WARNING
// -------
// The types declared in this file were generated from data read from a
// Type Library. If this type library is explicitly or indirectly (via
// another type library referring to this type library) re-imported, or the
// 'Refresh' command of the Type Library Editor activated while editing the
// Type Library, the contents of this file will be regenerated and all
// manual modifications will be lost.
// ************************************************************************ //

// $Rev: 52393 $
// File generated on 27.04.2015 6:05:33 from Type Library described below.

// ************************************************************************  //
// Type Lib: C:\Users\vitaliy\Documents\FireBirdXMLInterface\FireBird2XML\FireBird2XML (1)
// LIBID: {9A7B05E1-95CE-4E09-BFC3-2DC46838772A}
// LCID: 0
// Helpfile:
// HelpString:
// DepndLst:
//   (1) v2.0 stdole, (C:\Windows\SysWOW64\stdole2.tlb)
// SYS_KIND: SYS_WIN32
// ************************************************************************ //
{$TYPEDADDRESS OFF} // Unit must be compiled without type-checked pointers.
{$WARN SYMBOL_PLATFORM OFF}
{$WRITEABLECONST ON}
{$VARPROPSETTER ON}
{$ALIGN 4}

interface

uses Winapi.Windows, System.Classes, System.Variants, System.Win.StdVCL, Vcl.Graphics, Vcl.OleServer, Winapi.ActiveX;


// *********************************************************************//
// GUIDS declared in the TypeLibrary. Following prefixes are used:
//   Type Libraries     : LIBID_xxxx
//   CoClasses          : CLASS_xxxx
//   DISPInterfaces     : DIID_xxxx
//   Non-DISP interfaces: IID_xxxx
// *********************************************************************//
const
  // TypeLibrary Major and minor versions
  FireBird2XMLMajorVersion = 1;
  FireBird2XMLMinorVersion = 0;

  LIBID_FireBird2XML: TGUID = '{9A7B05E1-95CE-4E09-BFC3-2DC46838772A}';

  IID_ISQLTable: TGUID = '{3D841227-7532-4BC1-A486-2C3FF40F7761}';
  CLASS_SQLTable: TGUID = '{58557C1F-6991-4703-A47B-A5844FAF61C7}';
type

// *********************************************************************//
// Forward declaration of types defined in TypeLibrary
// *********************************************************************//
  ISQLTable = interface;

// *********************************************************************//
// Declaration of CoClasses defined in Type Library
// (NOTE: Here we map each CoClass to its Default Interface)
// *********************************************************************//
  SQLTable = ISQLTable;


// *********************************************************************//
// Interface: ISQLTable
// Flags:     (256) OleAutomation
// GUID:      {3D841227-7532-4BC1-A486-2C3FF40F7761}
// *********************************************************************//
  ISQLTable = interface(IUnknown)
    ['{3D841227-7532-4BC1-A486-2C3FF40F7761}']
    function GetName: PAnsiChar; stdcall;
  end;

// *********************************************************************//
// The Class CoSQLTable provides a Create and CreateRemote method to
// create instances of the default interface ISQLTable exposed by
// the CoClass SQLTable. The functions are intended to be used by
// clients wishing to automate the CoClass objects exposed by the
// server of this typelibrary.
// *********************************************************************//
  CoSQLTable = class
    class function Create: ISQLTable;
    class function CreateRemote(const MachineName: string): ISQLTable;
  end;

implementation

uses System.Win.ComObj;

class function CoSQLTable.Create: ISQLTable;
begin
  Result := CreateComObject(CLASS_SQLTable) as ISQLTable;
end;

class function CoSQLTable.CreateRemote(const MachineName: string): ISQLTable;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_SQLTable) as ISQLTable;
end;

end.

